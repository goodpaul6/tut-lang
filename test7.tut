module test

extern printf(format : cstr, ...) : void;
extern malloc(size : int) : ref;
extern memcpy(dest : ref, src : ref, size : int) : ref;
extern radd(r : ref, offset : int) : ref;
extern free(r : ref) : void;

struct Array
{
	datumSize : int;
	length : int;
	data : ref;
}

func make_array(length : int, datumSize : int) : Array
{
	var a : Array;

	a.datumSize = datumSize;
	a.length = length;
	a.data = malloc(length * datumSize);

	return a;
}

func array_set(a : ref-Array, index : int, value : ref) : void
{
	memcpy(radd(a->data, index * a->datumSize), value, a->datumSize);
}

func array_get(a : ref-Array, index : int) : ref
{
	return radd(a->data, index * a->datumSize);
}

func _main() : void
{
	var ints : Array = make_array(10, 4);
	
	var i : int = 0;
		
	while i < 10
	{
		array_set(&ints, i, &i);
		i = i + 1;
	}
	
	i = 0
	while i < 10
	{
		var ri  : ref-int = array_get(&ints, i);
		printf("%i\n", *ri); 
		i = i + 1;
	}
	
	free(ints.data);
}
